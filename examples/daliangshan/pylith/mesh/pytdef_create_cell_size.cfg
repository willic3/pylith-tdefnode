# -*- Python -*-
[pytdef_create_cell_size]
# Fraction of sizing function contributions from ellipsoidal, gradient, and RBF.
size_func_fracs = [0.5, 0.0, 0.5]
# Minimum cell size for ellipsoid sizing function.
ell_min_size = 1200.0
# Maximum cell size for ellipsoid sizing function.
ell_max_size = 60000.0
# (x,y,z) coordinates of ellipsoid center.
ell_center_coords = [-20000.0, 30000.0, 0.0]
# (x,y,z) lengths of ellipsoid axes.
ell_axis_lengths = [240000.0, 288000.0, 40000.0]
# Direction cosines defining rotation of ellipsoid w.r.t. (x,y,z) axes.
ell_x_dir_cos = [1.0, 0.0, 0.0]
ell_y_dir_cos = [0.0, 1.0, 0.0]
ell_z_dir_cos = [0.0, 0.0, 1.0]
# Exponent defining size increase outside ellipsoid.
ell_sf_exp = 2.0
# Nodeset names defining constant size values for RBF sizing function.
rbf_const_ns_names = [face_xpos, face_xneg, face_ypos, face_yneg, face_zneg, fault]
# Sizes assigned to each constant value nodeset.
rbf_const_ns_sizes = [60000.0, 60000.0, 60000.0, 60000.0, 60000.0, 1200.0]
# Sampling frequencies for constant value nodesets.
rbf_const_ns_sampfreq = [2, 2, 2, 2, 2, 15]
# The following could be defined if we wanted nodesets with variable sizing values.
# The values vary linearly along a surface from edge 1 to edge 2.
rbf_var_ns_names = []
rbf_var_ns_sampfreq = []
rbf_var_ns_edge1_names = []
rbf_var_ns_edge1_sizes = []
rbf_var_ns_edge2_names = []
rbf_var_ns_edge2_sizes = []
# Factor by which to scale sizes for RBF sizing function.
rbf_size_scale = 1.0
# Smoothing factor for RBF sizing function.
rbf_smoothing = 0.01
# Number of mesh slices to use when applying RBF (to avoid memory errors).
rbf_num_mesh_slices = 10
# Type of RBF interpolation to use.
rbf_type = linear
# Increment for which to print current cell number.
print_incr = 10000
